import PikaStdDevice


class GPIO(PikaStdDevice.GPIO):
    # overrid
    def platformGetEventId(self): ...
    def eventTest(self): ...


class Time(PikaStdDevice.Time):
    # override
    def sleep_s(self, s: int): ...
    def sleep_ms(self, ms: int): ...
    def platformGetTick(): ...
    def platformGetEventId(self): ...


class ADC(PikaStdDevice.ADC):
    # override
    def platformEnable(self): ...
    def platformRead(self): ...
    def platformDisable(self): ...
    def platformGetEventId(self): ...


class UART(PikaStdDevice.UART):
    # override
    def platformEnable(self): ...
    def platformWrite(self): ...
    def platformWriteBytes(self): ...
    def platformRead(self): ...
    def platformReadBytes(self): ...
    def platformDisable(self): ...
    def platformGetEventId(self): ...


class IIC(PikaStdDevice.IIC):
    # override
    def platformEnable(self): ...
    def platformWrite(self): ...
    def platformWriteBytes(self): ...
    def platformRead(self): ...
    def platformReadBytes(self): ...
    def platformDisable(self): ...
    def platformGetEventId(self): ...


class PWM(PikaStdDevice.PWM):
    # override
    def platformEnable(self): ...
    def platformSetFrequency(self): ...
    def platformSetDuty(self): ...
    def platformDisable(self): ...
    def platformGetEventId(self): ...


class SPI(PikaStdDevice.SPI):
    # override
    def platformEnable(self): ...
    def platformWrite(self): ...
    def platformWriteBytes(self): ...
    def platformRead(self): ...
    def platformReadBytes(self): ...
    def platformDisable(self): ...
    def platformGetEventId(self): ...


class CAN(PikaStdDevice.CAN):
    # override
    def platformEnable(self): ...
    def platformWrite(self): ...
    def platformWriteBytes(self): ...
    def platformRead(self): ...
    def platformReadBytes(self): ...
    def platformDisable(self): ...
    def platformGetEventId(self): ...


def __del__(self): ...
